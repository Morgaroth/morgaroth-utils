Index.PACKAGES = {"io.github.morgaroth.utils.mongodb.test" : [{"name" : "io.github.morgaroth.utils.mongodb.test.DBConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dbConfig", "tail" : "(): Config", "member" : "io.github.morgaroth.utils.mongodb.test.DBConfig.dbConfig", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html#dbConfig:com.typesafe.config.Config", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/github\/morgaroth\/utils\/mongodb\/test\/DBConfig.html", "kind" : "trait"}, {"name" : "io.github.morgaroth.utils.mongodb.test.Specs2MongoAround", "members_trait" : [{"label" : "before", "tail" : "(): Any", "member" : "io.github.morgaroth.utils.mongodb.test.Specs2MongoAround.before", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#before:Any", "kind" : "def"}, {"label" : "after", "tail" : "(): Any", "member" : "io.github.morgaroth.utils.mongodb.test.Specs2MongoAround.after", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#after:Any", "kind" : "def"}, {"label" : "uri", "tail" : ": MongoClientURI", "member" : "io.github.morgaroth.utils.mongodb.test.Specs2MongoAround.uri", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#uri:com.mongodb.casbah.MongoClientURI", "kind" : "val"}, {"label" : "fragmentFactory", "tail" : "(): ContextualFragmentFactory", "member" : "org.specs2.specification.BeforeAfterEach.fragmentFactory", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#fragmentFactory:org.specs2.specification.create.ContextualFragmentFactory", "kind" : "def"}, {"label" : "beforeAfterContext", "tail" : "(): (Env) ⇒ Context", "member" : "org.specs2.specification.BeforeAfterEach.beforeAfterContext", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#beforeAfterContext:org.specs2.specification.core.Env=>org.specs2.specification.Context", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "This trait remove test database before and after each example(block in { tests...", "trait" : "io\/github\/morgaroth\/utils\/mongodb\/test\/Specs2MongoAround.html", "kind" : "trait"}], "io.github.morgaroth" : [], "io.github.morgaroth.utils" : [], "org.specs2.matcher" : [], "org.specs2" : [], "io.github" : [], "io" : [], "org" : [], "io.github.morgaroth.utils.mongodb" : []};