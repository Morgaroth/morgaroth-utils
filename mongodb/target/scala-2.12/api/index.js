Index.PACKAGES = {"io.github.morgaroth" : [], "io.github.morgaroth.utils" : [], "io.github" : [], "io" : [], "io.github.morgaroth.utils.mongodb" : [{"name" : "io.github.morgaroth.utils.mongodb.JodaSupport", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/morgaroth\/utils\/mongodb\/JodaSupport.html", "kind" : "trait"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAO", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#ChildCollection[ChildType<:<?>,ChildID<:<?>]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAO#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[String], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: String, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[String]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[String]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[String]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAO.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey", "shortDescription" : "Helper class for constructing MongoDB DAO, uses Typesafe configuration and collection name asconstructor arguments, prepared especially for objects with key of type String", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey#<init>", "error" : "unsupported entity"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[KeyType], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: KeyType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: KeyType): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[KeyType]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[KeyType]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[KeyType]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: KeyType): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[KeyType]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[KeyType]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/MongoDAOAnyKey.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKeyFromResource", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKeyFromResource#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[IDType], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: IDType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[IDType]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[IDType]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[IDType]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResource.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKeyFromResourceJodaSupport", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKeyFromResourceJodaSupport#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[IDType], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: IDType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[IDType]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[IDType]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[IDType]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyFromResourceJodaSupport.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKeyJodaSupport", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKeyJodaSupport#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[IDType], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: IDType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[IDType]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[IDType]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[IDType]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOAnyKeyJodaSupport.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOFromResource", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOFromResource#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[String], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: String, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[String]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[String]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[String]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResource.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOFromResourceJodaSupport", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOFromResourceJodaSupport#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[String], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: String, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[String]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[String]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[String]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOFromResourceJodaSupport.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOJodaSupport", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOJodaSupport#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[String], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: String, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[String]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[String]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: String): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[String]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[String]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOJodaSupport.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOMongoDAOObjectIdKeyJodaSupport", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOMongoDAOObjectIdKeyJodaSupport#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[ObjectId], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: ObjectId, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[ObjectId]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[ObjectId]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[ObjectId]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOMongoDAOObjectIdKeyJodaSupport.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOObjectIdKey", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOObjectIdKey#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[ObjectId], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: ObjectId, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[ObjectId]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[ObjectId]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[ObjectId]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKey.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOObjectIdKeyFromResource", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOObjectIdKeyFromResource#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[ObjectId], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: ObjectId, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[ObjectId]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[ObjectId]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[ObjectId]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResource.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.MongoDAOObjectIdKeyFromResourceJodaSupport", "shortDescription" : "", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"member" : "io.github.morgaroth.utils.mongodb.MongoDAOObjectIdKeyFromResourceJodaSupport#<init>", "error" : "unsupported entity"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.MongoDAOAnyKey.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[ObjectId], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: ObjectId, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[ObjectId]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[ObjectId]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: ObjectId): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[ObjectId]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[ObjectId]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/package$$MongoDAOObjectIdKeyFromResourceJodaSupport.html", "kind" : "class"}, {"name" : "io.github.morgaroth.utils.mongodb.SalatDAOWithCfg", "shortDescription" : "Helper class with SalatDAO configuration read from application configuration file", "members_class" : [{"label" : "ChildCollection", "tail" : "", "member" : "salat.dao.SalatDAO.ChildCollection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#ChildCollection[ChildType<:AnyRef,ChildID]extendsSalatDAO[ChildType,ChildID]", "kind" : "abstract class"}, {"label" : "defaultWriteConcern", "tail" : "(): WriteConcern", "member" : "io.github.morgaroth.utils.mongodb.SalatDAOWithCfg.defaultWriteConcern", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#defaultWriteConcern:com.mongodb.WriteConcern", "kind" : "def"}, {"member" : "io.github.morgaroth.utils.mongodb.SalatDAOWithCfg#<init>", "error" : "unsupported entity"}, {"label" : "count", "tail" : "(q: DBObject, fieldsThatMustExist: List[String], fieldsThatMustNotExist: List[String], rp: com.mongodb.casbah.Imports.ReadPreference): Long", "member" : "salat.dao.SalatDAO.count", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#count(q:com.mongodb.DBObject,fieldsThatMustExist:List[String],fieldsThatMustNotExist:List[String],rp:com.mongodb.casbah.Imports.ReadPreference):Long", "kind" : "def"}, {"label" : "primitiveProjections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.primitiveProjections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#primitiveProjections[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "projections", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): List[P]", "member" : "salat.dao.SalatDAO.projections", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#projections[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):List[P]", "kind" : "def"}, {"label" : "primitiveProjection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.primitiveProjection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#primitiveProjection[P](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "projection", "tail" : "(query: DBObject, field: String)(m: Manifest[P], ctx: Context): Option[P]", "member" : "salat.dao.SalatDAO.projection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#projection[P<:salat.CaseClass](query:com.mongodb.DBObject,field:String)(implicitm:Manifest[P],implicitctx:salat.Context):Option[P]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.SalatDAO.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#find[A,B](ref:A,keys:B,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$9:A=>com.mongodb.DBObject,implicitevidence$10:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, sort: B, t: ObjectType)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#findAndModify[A,B](q:A,sort:B,t:ObjectType)(implicitevidence$7:A=>com.mongodb.DBObject,implicitevidence$8:B=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "findAndModify", "tail" : "(q: A, t: ObjectType)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findAndModify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#findAndModify[A](q:A,t:ObjectType)(implicitevidence$6:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, o: DBObject, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#update(q:com.mongodb.DBObject,o:com.mongodb.DBObject,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#save(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeByIds", "tail" : "(ids: List[IDType], wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeByIds", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#removeByIds(ids:List[ID],wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "removeById", "tail" : "(id: IDType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.removeById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#removeById(id:ID,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A, wc: WriteConcern)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#remove[A](q:A,wc:com.mongodb.WriteConcern)(implicitevidence$5:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.SalatDAO.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#remove(t:ObjectType,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneById", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOneById", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#findOneById(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A, rp: com.mongodb.casbah.Imports.ReadPreference)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.SalatDAO.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#findOne[A](t:A,rp:com.mongodb.casbah.Imports.ReadPreference)(implicitevidence$4:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "ids", "tail" : "(query: A)(arg0: (A) ⇒ DBObject): List[IDType]", "member" : "salat.dao.SalatDAO.ids", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#ids[A](query:A)(implicitevidence$3:A=>com.mongodb.DBObject):List[ID]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: Traversable[ObjectType], wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#insert(docs:Traversable[ObjectType],wc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType, wc: WriteConcern): Option[IDType]", "member" : "salat.dao.SalatDAO.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#insert(t:ObjectType,wc:com.mongodb.WriteConcern):Option[ID]", "kind" : "def"}, {"label" : "description", "tail" : ": String", "member" : "salat.dao.SalatDAO.description", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#description:String", "kind" : "lazy val"}, {"label" : "decorateDBO", "tail" : "(toPersist: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.SalatDAO.decorateDBO", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#decorateDBO(toPersist:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "decorateQuery", "tail" : "(query: DBObject): DBObject", "member" : "salat.dao.SalatDAO.decorateQuery", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#decorateQuery(query:com.mongodb.DBObject):com.mongodb.DBObject", "kind" : "def"}, {"label" : "appendTypeHintToQueries", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.appendTypeHintToQueries", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#appendTypeHintToQueries:Boolean", "kind" : "val"}, {"label" : "forceTypeHints", "tail" : ": Boolean", "member" : "salat.dao.SalatDAO.forceTypeHints", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#forceTypeHints:Boolean", "kind" : "val"}, {"label" : "_grater", "tail" : ": Grater[ObjectType]", "member" : "salat.dao.SalatDAO._grater", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#_grater:salat.Grater[ObjectType]", "kind" : "val"}, {"label" : "collection", "tail" : ": com.mongodb.casbah.Imports.MongoCollection", "member" : "salat.dao.SalatDAO.collection", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#collection:com.mongodb.casbah.Imports.MongoCollection", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "com.mongodb.casbah.commons.Logging.log", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#log:com.mongodb.casbah.commons.Logger", "kind" : "val"}, {"label" : "toDBObject", "tail" : "(o: ObjectType): com.mongodb.casbah.Imports.DBObject", "member" : "salat.dao.DAO.toDBObject", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#toDBObject(o:ObjectType):com.mongodb.casbah.Imports.DBObject", "kind" : "def"}, {"label" : "defaultReadPreference", "tail" : "(): ReadPreference", "member" : "salat.dao.DAO.defaultReadPreference", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#defaultReadPreference:com.mongodb.ReadPreference", "kind" : "def"}, {"label" : "remove", "tail" : "(q: A)(arg0: (A) ⇒ DBObject): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#remove[A](q:A)(implicitevidence$12:A=>com.mongodb.DBObject):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "remove", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.remove", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#remove(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "update", "tail" : "(q: DBObject, t: ObjectType, upsert: Boolean, multi: Boolean, wc: WriteConcern): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.update", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#update(q:com.mongodb.DBObject,t:ObjectType,upsert:Boolean,multi:Boolean,wc:com.mongodb.WriteConcern):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "save", "tail" : "(t: ObjectType): com.mongodb.casbah.Imports.WriteResult", "member" : "salat.dao.BaseDAOMethods.save", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#save(t:ObjectType):com.mongodb.casbah.Imports.WriteResult", "kind" : "def"}, {"label" : "findOneByID", "tail" : "(id: IDType): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOneByID", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#findOneByID(id:ID):Option[ObjectType]", "kind" : "def"}, {"label" : "findOne", "tail" : "(t: A)(arg0: (A) ⇒ DBObject): Option[ObjectType]", "member" : "salat.dao.BaseDAOMethods.findOne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#findOne[A](t:A)(implicitevidence$7:A=>com.mongodb.DBObject):Option[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A, keys: B)(arg0: (A) ⇒ DBObject, arg1: (B) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#find[A,B](ref:A,keys:B)(implicitevidence$3:A=>com.mongodb.DBObject,implicitevidence$4:B=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "find", "tail" : "(ref: A)(arg0: (A) ⇒ DBObject): SalatMongoCursor[ObjectType]", "member" : "salat.dao.BaseDAOMethods.find", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#find[A](ref:A)(implicitevidence$2:A=>com.mongodb.DBObject):salat.dao.SalatMongoCursor[ObjectType]", "kind" : "def"}, {"label" : "insert", "tail" : "(docs: ObjectType*)(wc: WriteConcern): List[Option[IDType]]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#insert(docs:ObjectType*)(implicitwc:com.mongodb.WriteConcern):List[Option[ID]]", "kind" : "def"}, {"label" : "insert", "tail" : "(t: ObjectType): Option[IDType]", "member" : "salat.dao.BaseDAOMethods.insert", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#insert(t:ObjectType):Option[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/morgaroth\/utils\/mongodb\/SalatDAOWithCfg.html", "kind" : "class"}]};